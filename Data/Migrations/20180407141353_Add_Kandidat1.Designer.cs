// <auto-generated />
using CZE.Data;
using CZE.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CZE.Data.Migrations
{
    [DbContext(typeof(CZEContext))]
    [Migration("20180407141353_Add_Kandidat1")]
    partial class Add_Kandidat1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CZE.Data.Models.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("GradId");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("CZE.Data.Models.Kandidat", b =>
                {
                    b.Property<int>("KandidatId");

                    b.Property<string>("Biljeske");

                    b.Property<DateTime>("DatumUpisa")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("KandidatId");

                    b.ToTable("Kandidat");
                });

            modelBuilder.Entity("CZE.Data.Models.Osoba", b =>
                {
                    b.Property<int>("OsobaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("AdresaFirme")
                        .HasMaxLength(100);

                    b.Property<string>("BrojMobitela")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("BrojTelefona")
                        .HasMaxLength(15);

                    b.Property<string>("BrojTelefonaFirme")
                        .HasMaxLength(15);

                    b.Property<DateTime>("DatumRodjenja");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("EmailFirme")
                        .HasMaxLength(100);

                    b.Property<int?>("GradFirmeId");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("KakoSteSaznaliZaNas")
                        .HasMaxLength(500);

                    b.Property<int>("MjestoBoravkaId");

                    b.Property<int>("MjestoRodjenjaId");

                    b.Property<string>("NazivFirme")
                        .HasMaxLength(100);

                    b.Property<bool>("PodaciOFirmi");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Spol");

                    b.HasKey("OsobaId");

                    b.HasIndex("GradFirmeId");

                    b.HasIndex("MjestoBoravkaId");

                    b.HasIndex("MjestoRodjenjaId");

                    b.ToTable("Osobe");
                });

            modelBuilder.Entity("CZE.Data.Models.Kandidat", b =>
                {
                    b.HasOne("CZE.Data.Models.Osoba", "Osoba")
                        .WithOne("Kandidat")
                        .HasForeignKey("CZE.Data.Models.Kandidat", "KandidatId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CZE.Data.Models.Osoba", b =>
                {
                    b.HasOne("CZE.Data.Models.Grad", "GradFirma")
                        .WithMany()
                        .HasForeignKey("GradFirmeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CZE.Data.Models.Grad", "MjestoBoravka")
                        .WithMany()
                        .HasForeignKey("MjestoBoravkaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CZE.Data.Models.Grad", "MjestoRodjenja")
                        .WithMany()
                        .HasForeignKey("MjestoRodjenjaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
